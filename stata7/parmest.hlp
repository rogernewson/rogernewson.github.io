{smcl}
{hline}
help for {cmd:parmest} and {cmd:parmby} {right:(STB-49: dm65; STB-58: dm65.1; Roger Newson)}
{hline}


{title:Convert estimation results to a data set with one observation per parameter}

{p 8 15}{cmd:parmest} {cmd:,} [ {cmdab:d:of}{cmd:(}{it:#}{cmd:)} {cmdab:l:abel} {cmdab:yl:abel}
 {cmdab:ef:orm} {cmdab:le:vel}{cmd:(}{it:numlist}{cmd:)} {cmdab:cln:umber}{cmd:(}{it:numbering_rule}{cmd:)}
 {cmdab:sa:ving}{cmd:(}{it:filename}[{cmd:,replace}]{cmd:)} {cmdab::no}{cmdab:re:store} {cmd:fast}
 {cmdab:em:ac}{cmd:(}{it:name_list_1}{cmd:)} {cmdab:es:cal}{cmd:(}{it:name_list_2}{cmd:)} {cmdab:ev:ec}{cmd:(}{it:name_list_3}{cmd:)}
 {cmdab:idn:um}{cmd:(}{it:#}{cmd:)} {cmdab:ids:tr}{cmd:(}{it:string}{cmd:)}
 {cmdab:fl:ist}{cmd:(}{it:global_macro_name}{cmd:)}
 {break} {cmdab:ren:ame}{cmd:(}{it:oldvarname_1 newvarname_1 ... oldvarname_n newvarname_n}{cmd:)}
 {cmdab:fo:rmat}{cmd:(}{it:varlist_1 format_1 ... varlist_n format_n}{cmd:)}
 {cmdab:li:st}{cmd:(}{it:varlist}{cmd:)}
 {cmdab::no}{cmdab:dou:ble} {cmdab:float} ]

{p 8 15}{cmd:parmby} {cmd:"}{it:command}{cmd:"} {cmd:,} [ {cmd:by(}{it:varlist}{cmd:)} {cmdab:com:mand} {it:parmest_options} ]

{p}
where {it:command} is a Stata {help est:estimation command}.


{title:Description}

{p}
{cmd:parmest} takes, as input, the most recently calculated set of {help return:estimation results},
created by the most recently executed {help est:estimation command}.
It creates, as output, a new data set, with one observation per parameter, and variables
corresponding to parameter names, estimates, standard errors, {it:z}-test or {it:t}-test statistics,
{it:P}-values, confidence limits, and other estimation results requested. {cmd:parmby} executes
an {help est:estimation command} for each by-group specified by the by-variables,
and then creates an output data set with one observation per parameter of the model
in each by-group for which the command executed successfully, and all the variables in the {cmd:parmest}
output data set, together with the by-variables.  The output data set may be listed to the Stata log
and/or saved to a disk file and/or retained in the memory (overwriting any pre-existing data set).
{cmd:parmby} works by calling {cmd:parmest}, and therefore should not be downloaded without {cmd:parmest}.


{title:Options for use with {cmd:parmest} and {cmd:parmby}}

{p 0 4}{cmd:dof(}{it:#}{cmd:)} specifies the degrees of freedom for {it:t}-distribution-based confidence
limits. If {cmd:dof} is positive, then confidence limits for all parameters are calculated using the
{it:t}-distribution with {cmd:dof} degrees of freedom. If {cmd:dof} is zero, then confidence limits are
calculated using the standard normal distribution. If {cmd:dof} is absent (or negative),
then confidence limits are calculated from the most recent {help return:estimation results}, as follows.
If the most recent {help est:estimation command} is {help svymean}, {help svyratio} or {help svytotal},
and the command was specified with the {cmd:available} option instead of the {cmd:complete} option,
then the degrees of freedom used for each parameter is extracted from the corresponding row of the
column vector {hi:(e(_N_psu)-e(_N_str))'}, where {hi:e(_N_psu)} contains the numbers of primary sampling
units (clusters) for each parameter and {hi:e(_N_str)} contains the numbers of strata for each parameter.
(See {hi:[R] svymean} for formulas.) Otherwise, if there is a non-missing result {hi:e(df_r)}, containing the
residual degrees of freedom, then the degrees of freedom for all parameters is set to the value of
{hi:e(df_r)}. Otherwise, the confidence limits are calculated using the standard normal distribution.

{p 0 4}{cmd:label} specifies that a variable named {hi:label} is to be generated in the output data
set, containing the variable labels of variables corresponding to the
parameter names, if such variables can be found in the existing data set. For a parameter named
{hi:_cons}, which is always a constant term in a model, the variable {hi:label} is set to "Constant".
If the estimation command is {help lincomest} (a version of {help lincom} downloadable from {help ssc:SSC}),
then {hi:label} is set to the linear combination formula specified to {help lincomest}.

{p 0 4}{cmd:ylabel} specifies that a variable named {hi:ylabel} is to be generated in the output data
set, containing the variable labels of {it:Y}-variables. 
If the most recent {help est:estimation command} is {help svymean}, {help svyratio} or {help svytotal},
then the variable labels correspond to the equation names, if such variables can be found in
the existing data set. Otherwise, the variable labels correspond to the variable specified
in the estimation result {hi:e(depvar)} returned by the most recent {help est:estimation command},
if such a variable can be found in the existing data set.

{p 0 4}{cmd:eform} specifies that the estimates and confidence limits in the output data set
are to be exponentiated, and the standard errors multiplied by the exponentiated estimates.
This option is usually used if the estimated parameters were calculated on a log scale, as is done by
{help logit} and {help logistic} with odds ratios, by {help glm} and {help binreg} with risk ratios,
by {help stcox} with hazard ratios, or by {help regress} with geometric mean ratios.

{p 0 4}{cmd:level(}{it:numlist}{cmd:)} specifies the confidence levels, in percent, for
the confidence limit variables created in the output data set.
These levels do not have to be integers, but must be at least 0 and strictly less than 100.
For each level {it:xx}, {cmd:parmest} and {cmd:parmby} calculate a lower {it:xx} percent confidence
limit variable with a default name of form {hi:min}{it:xx} and an upper {it:xx} percent confidence level
with a default name of form {hi:max}{it:xx}. The numbering of the confidence limits can be changed using the
{cmd:clnumber} option (see below), and the names of the confidence limits can be changed using the {cmd:rename}
option (see below). The default is {cmd:level(95)} or another single number as set by {help set level}.
(See {hi:[U] Estimation and post-estimation commands}.)

{p 0 4}{cmd:clnumber(}{it:numbering_rule}{cmd:)} specifies the rule used to number the names of the
confidence limit variables created in the output data set.
The {it:numbering_rule} may be {cmd:level} or {cmd:rank}, and is set in default to {cmd:level}
if the {cmd:clnumber} option is not specified. For each confidence level {it:xx} specified by the
{cmd:levels} option, {cmd:parmest} and {cmd:parmby} calculate a lower
{it:xx} percent confidence limit with the default name {hi:min}{it:yy}, and an upper {it:xx} percent
confidence limit with the default name {hi:max}{it:yy}, where the number {it:yy} depends on the
confidence level {it:xx} according to a rule specified by the {it:numbering_rule} of the {cmd:clnumber}
option. If the {it:numbering_rule} is {cmd:rank}, then the number {it:yy} is the rank, in ascending
order, of the confidence level {it:xx} in the set of confidence levels specified by the {cmd:levels} option.
For instance, if the user specifies {cmd:levels(90 95 99) clnumber(rank)},
then the 90 percent confidence limits are named {hi:min1} and {hi:max1},
the 95 percent confidence limits are named {hi:min2} and {hi:max2},
and the 99 percent confidence limits are named {hi:min3} and {hi:max3}. If the numbering rule is
{cmd:level} (the default), then the number {it:yy} is equal to the confidence level {it:xx}.
For instance, if the user specifies {cmd:levels(90 95 99) clnumber(lewel)},
then the 90 percent confidence limits are named {hi:min90} and {hi:max90},
the 95 percent confidence limits are {hi:min95} and {hi:max95},
and the 99 percent confidence limits are {hi:min99} and {hi:max99}.
If the confidence level {it:xx} contains a decimal point, then the decimal point is replaced with "_"
in the variable names {hi:min}{it:xx} and {hi:max}{it:xx}.
If the confidence level {it:xx} contains "e-" (because of very small e-format confidence levels),
then the "e-" is replaced with "em" in the variable names {hi:min}{it:xx} and {hi:max}{it:xx}.
Therefore, if the user specifies {cmd:level(95 99.99) clnumber(level)}, then the output data set
contains 95% lower and upper confidence limits in variables
{hi:min95} and {hi:max95}, and 99.99% lower and upper confidence limits in variables {hi:min99_99} and
{hi:max99_99}. The option {cmd:clnumber(rank)} is useful if the confidence levels contain many
numbers after the decimal point, which may be the case if the user specifies Bonferroni-corrected
or Sidak-corrected confidence limits.

{p 0 4}{cmd:saving(}{it:filename}[{cmd:,replace}]{cmd:)} saves the output data set in a file. If {cmd:replace}
is specified, and a file of that name already exists, then the old file is
overwritten. The user must specify at least one of the four options {cmd:list}, {cmd:saving()}, {cmd:norestore}
and {cmd:fast}. These four options specify whether the output data set is listed to the Stata log,
saved to a disk file, or written to the memory (overwriting any pre-existing data set). More than
one of these options can be specified.

{p 0 4}{cmd:norestore} specifies that the output data set will be written to the memory,
overwriting any pre-existing data set. This option is automatically set if {cmd:fast} is
specified. Otherwise, if {cmd:norestore} is not specified, then the pre-existing data set is restored
in the memory after the execution of {cmd:parmby} or {cmd:parmest}.

{p 0 4}{cmd:fast} is intended for use by programmers. It specifies that the
pre-existing data set in the memory will not be restored, even if the user presses {help break:Break}
during the execution of {cmd:parmby} or {cmd:parmest}. If {cmd:norestore}
is set and {cmd:fast} is absent, then {cmd:parmest} or {cmd:parmby} will go to extra work so that
it can restore the original data if the user presses {help break:Break}.

{p 0 4}{cmd:emac(}{it:name_list_1}{cmd:)} specifies a list of names of macro
{help estimates:estimation results} to be stored as additional string variables in the output data set.
These variables will be named {hi:em_1}, ..., {hi:em_}{it:n}, in the order in which they are
specified in the {it:name_list_1}. Their values will be the values of the corresponding macro
{help estimates:estimation results}, truncated if necessary to the maximum length of a string variable
in the version of Stata currently being used (eg 80 characters in Small or Intercooled Stata 7,
or 244 characters in {help specialedition:Stata 7 SE}).

{p 0 4}{cmd:escal(}{it:name_list_2}{cmd:)} specifies a list of names of scalar
{help estimates:estimation results} to be stored as additional numeric variables
in the output data set. These variables will be named {hi:es_1}, ..., {hi:es_}{it:n},
in the order in which they are specified in the {it:name_list_2}. Their values will be the values
of the corresponding scalar {help estimates:estimation results}.

{p 0 4}{cmd:evec(}{it:name_list_3}{cmd:)} specifies a list of names of matrix
{help estimates:estimation results} to be stored as additional numeric variables
in the output data set. These variables will be named {hi:ev_1}, ..., {hi:ev_}{it:n},
in the order in which they are specified in the name_list.
Their values will be extracted from the corresponding matrix
{help estimates:estimation results}, and will be reformatted if necessary,
in order to fit in a variable with one observation per model parameter.
If the matrix is a square matrix with numbers of rows and columns equal to the
number of parameters in the model, then the corresponding output variable will
contain its vector diagonal. Otherwise, if the matrix has a number of columns
equal to the number of parameters, then the corresponding output variable will
contain its first row. Otherwise, if the matrix has a number of rows equal to the
number of parameters, then the corresponding output variable will contain its first
column. Otherwise, the corresponding output variable will contain its first
column, truncated or completed with missing values as necessary. If the matrix
estimation result does not exist, then the corresponding output variable will
be filled with missing values. These rules may seem complicated, but are probably sensible.

{p 0 4}{cmd:idnum(}{it:#}{cmd:)} specifies an ID number for the set of estimation results.
It is used to create a numeric variable {hi:idnum} in the output data set with that value for all
observations. This is useful if the output data set is concatenated with
other {cmd:parmest} or {cmd:parmby} output data sets using {help append}, or using
{help dsconcat} if installed.

{p 0 4}{cmd:idstr(}{it:string}{cmd:)} specifies an ID string for the set of estimation results.
It is used to create a string variable {hi:idstr} in the output data set with that value for all
observations. (A {cmd:parmest} or {cmd:parmby} output data set may contain a variable {hi:idnum},
a variable {hi:idstr}, both, or neither.)

{p 0 4}{cmd:flist(}{it:global_macro_name}{cmd:)} specifies the name of a global macro, containing
a filename list (possibly empty). If {cmd:saving} is also specified, then
{cmd:parmest} or {cmd:parmby} will append the name of the data set specified in the
{cmd:saving} option to the value of the global macro specified in {cmd:flist}. This
enables the user to build a list of filenames in a global macro, containing the
output of a sequence of estimation result sets saved by {cmd:parmest} or {cmd:parmby}.
These files may later be concatenated using {help append}, or using {help dsconcat}
if installed.

{p 0 4}{cmd:rename(}{it:oldvarname_1 newvarname1 ... oldvarname_n newvarname_n}{cmd:)}
specifies a list
of pairs of variable names. The first variable name of each pair specifies a
variable in the {cmd:parmest} output data set, which is renamed to the second
variable name of the pair. This option is provided to prevent name clashes,
especially with variables in the {cmd:by} list of {cmd:parmby} (see below).

{p 0 4}{cmd:format(}{it:varlist_1 format_1 ... varlist_n format_n}{cmd:)}
specifies a list of pairs of variable lists and formats. The formats will be allocated to
the variables in the output data set specified by the corresponding {it:varlist}s.
If {cmd:rename} is specified, then
any variable names specified by the {cmd:format} option must be the new names.

{p 0 4}{cmd:list(}{it:varlist}{cmd:)} specifies a list of variables in the output
data set, which will be listed to the Stata log by {cmd:parmby} or {cmd:parmest}.
If {cmd:rename} is specified, then any variable names specified by the {cmd:list} option
must be the new names. The {cmd:list} option can be used with the {cmd:format} option
to produce a list of parameter names, estimates, confidence limits,
{it:P}-values and other parameter attributes
with a specified number of decimal places or significant figures. If the user does this,
then s/he does not need to do any manual rounding of the parameter estimates
and/or {it:P}-values output in the Stata log.

{p 0 4}{cmd:nodouble} specifies that there will be no variables in the output data set of type
{hi:double}. If {cmd:nodouble} is not specified, then all numeric variables in the
output data set will be of type {hi:double}, and therefore stored to double
precision, except if they can be compressed without loss of precision, in which
case they will be compressed as far as possible without loss of precision. If
{cmd:nodouble} is specified, then variables of type {hi:double} in the output data set
will be converted to {hi:float}, even if this results in loss of precision.

{p 0 4}{cmd:float} is an alternative way of specifying {cmd:nodouble}.


{title:Options for use only with {cmd:parmby}}

{p 0 4}{cmd:by(}{it:varlist}{cmd:)} specifies a list of existing variables which would normally appear
in the {cmd:by} {it:varlist}{cmd::} section of the Stata estimation command called by {cmd:parmby}.
{cmd:parmby} creates an output data set with one observation for each parameter in each by-group in
which the command executed successfully. The output data set contains values of the by-variables
in each by-group (if {cmd:by} is specified), in addition to the variables created
by {cmd:parmest}. However, the {cmd:by} option is optional, and {cmd:parmby} will still work
without it, creating an output data set with one observation per parameter of a single set of
estimation results.

{p 0 4}{cmd:command} specifies that the text of the {it:command} called by {cmd:parmby}
is saved in the output data set in a string variable named {hi:command}. The text of the
command is truncated, if necessary, to the maximum length of a string variable under the
edition of Stata currently in use, eg 80 characters in Small or Intercooled Stata 7, or
244 characters in {help specialedition:Stata 7 SE}.


{title:Output data sets created by {cmd:parmest} and {cmd:parmby}}

{p}
The output data set created by {cmd:parmest} or {cmd:parmby} has one observation per parameter
of a set of estimation results, or one observation per parameter per by-group if
the {cmd:by} option is specified with {cmd:parmby}. If the {cmd:rename} option
is not specified, then the output data set contains the following variables:

{hi:idnum}           Numeric ID
{hi:idstr}           String ID
{hi:eq}              Equation name
{hi:parm}            Parameter name
{hi:label}           Parameter label
{hi:ylabel}          {it:Y}-variable label
{hi:estimate}        Parameter estimate
{hi:stderr}          SE of parameter estimate
{hi:dof}             Degrees of freedom
{hi:t}               {it:t}-test statistic
{hi:z}               {it:z}-test statistic
{hi:p}               {it:P}-value
{hi:min}{it:yy}           Lower {it:xx}% confidence limit
{hi:max}{it:yy}           Upper {it:xx}% confidence limit
{hi:em_}{it:y}            {it:y}th macro estimation result specified by {cmd:emac}
{hi:es_}{it:y}            {it:y}th scalar estimation result specified by {cmd:escal}
{hi:ev_}{it:y}            {it:y}th vector estimation result specified by {cmd:evec}

{p}
The variables {hi:idnum} and {hi:idstr} are only present if the user specifies the options
{cmd:idnum} and {cmd:idstr}, respectively. The variable {hi:eq} is only present if the estimation results
are from a command which creates estimation matrices with equation names, eg a command which fits
a multiple equation model. The variable {hi:label} is only present if the {cmd:label}
option is specified. The variable {hi:ylabel} is only present if the {cmd:ylabel}
option is specified. Either the variables {hi:dof} and {hi:t} are present or the variable {hi:z}
is present, depending on the setting of the {cmd:dof} option, or on the estimation results,
if {cmd:dof} is not specified. The variable {hi:dof} is calculated as specified in the section
on the {cmd:dof} option (see above). Note that the degrees of freedom in {hi:dof} may be different
for different parameters of the same model, and are not always integers. The {it:P}-values in the
variable {hi:p} test the hypothesis that the corresponding parameter is zero, or one if the
{cmd:eform} option is specified. The {it:xx}% confidence limits {hi:min}{it:yy} and {hi:max}{it:yy}
are calculated using a list of one or more confidence levels {it:xx}, which may be specified in the
{cmd:level} option, or by {help set level}, and which is a single confidence level of 95% if not specified.
The number {it:yy} used to number the {it:xx} percent confidence limits {hi:min}{it:yy} and {hi:max}it:yy}
is equal to the confidence level {xx} unless the user specifies {cmd:clnumber(rank)},
in which case the number {yy} is the rank, in ascending order, of the confidence level {xx}.
There is one {hi:em_}{it:y} variable for each macro estimation result in the list specified by the
{cmd:emac} option, one {hi:es_}{it:y} variable for each scalar estimation result specified by the
{cmd:escal} option, and one {hi:ev_}{it:y} variable for each vector estimation result specified in the
{cmd:evec} option. The variables {hi:em_}{it:y} are string variables, truncated if necessary to the
maximum length for a string variable under the edition of Stata used. All of these variables can be
renamed using the {cmd:rename} option.

{p}
The output data set created by {cmd:parmby} contains all the variables in the output data
set created by {cmd:parmest}, and the following additional variables:

{it:by-variables}    Variables specified in the {cmd:by} option
{hi:parmseq}         Parameter sequence number
{hi:command}         Estimation command

{p}
The {it:by-variables} are only present if the {cmd:by} option is specified.
The variable {hi:command} is only present if the {cmd:command} option is specified.
The {cmd:parmby} output data set is sorted primarily by the {it:by-variables},
in the order specified in the {cmd:by} option, if the {cmd:by} option is specified,
and sorted secondarily by {hi:parmseq}, which contains the sequential order of the parameter
in the estimation result vector (which is usually {hi:e(b}}). {hi:command} and {hi:parmseq}
can be renamed by {cmd:parmby} using the {cmd:rename} option, but the {it:by-variables}
cannot be renamed by {cmd:parmby}.


{title:Remarks}

{p}
{cmd:parmby} is similar to {help statsby}, but it creates a data
set with one observation per parameter per by-group, instead of a data set with one
observation per by-group. Also, in default, {cmd:parmby} outputs the estimation output
to the log, although the user can use {help quietly} to suppress this.
{cmd:parmby} is a "quasi-byable" front end for {cmd:parmest}, and is the command recommended
for use in any new programs which create output data sets. {cmd:parmest} is an older command,
and is mainly used when the user wishes simply to use the {cmd:list} option to list the estimation
output with user-specified formats or parameter labels, so that the results for each parameter are presented
to a number of decimal places and/or significant figures specified by the user, and may also be labelled
with the variable label corresponding to the parameter.
With either {cmd:parmby} or {cmd:parmest}, the user must specify at least one of the four options
{cmd:list()}, {cmd:saving()}, {cmd:norestore} and/or {cmd:fast}. These options specify whether
the output data set is listed to the Stata log, saved to a disk file, or written to the memory
(overwriting any pre-existing data set).


{title:Examples}

{p}
The following examples use the {cmd:list} option to list a subset of the output data set to the Stata log.
After these examples are executed, there is no new data set either in the memory or on disk.

{p 16 20}{inp:. regr price mpg weight,robust}{p_end}
{p 16 20}{inp:. parmest,format(estimate min95 max95 %8.2f p %8.1e) list(*)}{p_end}

{p 16 20}{inp:. glm mpg foreign,family(gamma) link(power -1)}{p_end}
{p 16 20}{inp:. parmest, label format(estimate min95 max95 p %8.2f p %8.1e) list(parm label estimate min95 max95 p)}{p_end}

{p 16 20}{inp:. parmby "qui logit foreign mpg, or", label eform for(estimate min95 max95 %8.2f p %8.1e) li(parm label estimate min95 max95 p)}{p_end}

{p 16 20}{inp:. parmby "qui logit foreign mpg, or", level(95 97.5) cln(rank) label eform for(estimate min* max* %8.2f p %8.1e) li(parm label estimate min2 min1 max1 max2 p)}{p_end}

{p}
The following examples use the {cmd:norestore} option to create an output data set in the memory,
overwriting any pre-existing data set.

{p 16 20}{inp:. parmby "regr mpg weight,robust",by(foreign) label command norestore}{p_end}

{p 16 20}{inp:. gene gpm=1/mpg}{p_end}
{p 16 20}{inp:. rename foreign t}{p_end}
{p 16 20}{inp:. parmby "regr gpm weight",by(t) label rename(t tstat p pvalue) norestore}{p_end}

{p 16 20}{inp:. parmby "svymean mpg weight,by(foreign) available",norestore ev(_N _N_subp V_db) em(depvar) es(N)}{p_end}
{p 16 20}{inp:. describe}{p_end}
{p 16 20}{inp:. list eq parm ev_* em_* es_*}{p_end}

{p}
The following examples use the {cmd:saving} option to create an output data set in a disk file.

{p 16 20}{inp:. parmby "logit foreign mpg, or", label eform saving(parms1.dta)}{p_end}

{p 16 20}{inp:. parmby "regr mpg weight displ,robust",by(foreign) label saving(myparms,replace)}{p_end}

{p}
The following example demonstrates the use of {cmd:parmby} with multiple regression commands,
saving the results in multiple temporary data sets. These data sets are then concatenated,
using the {help dsconcat} command, to form a single data set in memory, with one observation
for each parameter in each regression. The {help dsconcat} command can be downloaded from
{help ssc:SSC} using the {help ssc} command in Stata. This example uses the options {cmd:idnum}
and {cmd:idstr} to create analysis identifier variables, which contain information identifying
the regression model for each parameter.

{p 16 20}{inp:. gene gpm=1/mpg}{p_end}
{p 16 20}{inp:. tempfile tf1 tf2 tf3}{p_end}
{p 16 20}{inp:. parmby "regr gpm weight", lab saving(`tf1',replace) idn(1) ids(Unadjusted)}{p_end}
{p 16 20}{inp:. parmby "regr gpm foreign", lab saving(`tf2',replace) idn(2) ids(Unadjusted)}{p_end}
{p 16 20}{inp:. parmby "regr gpm weight foreign", lab saving(`tf3',replace) idn(3) ids(Adjusted)}{p_end}
{p 16 20}{inp:. dsconcat `tf1' `tf2' `tf3'}{p_end}
{p 16 20}{inp:. list idnum idstr parm estimate min95 max95 p,noobs nodis}{p_end}

{p}
The following advanced example demonstrates the use of the {cmd:flist} option with the {help dsconcat}
command (downloadable from {help ssc:SSC}). {cmd:parmby} is used to carry out multiple regression analyses,
storing the results in temporary files, whose names are stored by the {cmd:flist} option in a
global macro {hi:tflist}. The files are then concatenated using {help dsconcat} to create a single
long data set in memory, with one observation for each parameter of each regression model.
For each parameter, the regression model for that parameter is identified by the string variable
{hi:command} and the numeric analysis identifier variable {hi:idnum}. The data set is
formatted, sorted, described and listed.

{p 16 20}{inp:. global tflist ""}{p_end}
{p 16 20}{inp:. global modseq=0}{p_end}
{p 16 20}{inp:. foreach X of var headroom trunk weight length turn displacement gear_ratio {c -(}}{p_end}
{p 16 20}{inp:.   global modseq=$modseq+1}{p_end}
{p 16 20}{inp:.   tempfile tf$modseq}{p_end}
{p 16 20}{inp:.   parmby "regr mpg `X'",by(foreign) label command format(estimate min95 max95 %8.2f p %8.1e) idn($modseq) saving(`tf$modseq',replace) flist(tflist)}{p_end}
{p 16 20}{inp:. {c )-}}{p_end}
{p 16 20}{inp:. dsconcat $tflist}{p_end}
{p 16 20}{inp:. sort idnum command foreign parmseq}{p_end}
{p 16 20}{inp:. describe}{p_end}
{p 16 20}{inp:. by idnum command:list foreign parm label estimate min95 max95 p,noobs}{p_end}


{title:Author}

{p}
Roger Newson, King's College, London, UK.
Email: {browse "mailto:roger.newson@kcl.ac.uk":roger.newson@kcl.ac.uk}


{title:Also see}

{p 0 10}
{bind:    }STB:  STB-49 dm65, STB-58 dm65.1
{p_end}
{p 0 10}
{bind: }Manual:  {hi:[U] 23 Estimation and post-estimation commands},
{break} {hi:[U] 29 Overview of model estimation in Stata},
{break} {hi:[R] statsby}, {break} {hi:[R] append}
{p_end}
{p 0 10}
On-line:  help for {help append}, {help statsby}, {help est}, {help postest}
{break} help for {help dsconcat} and {help lincomest} if installed
{p_end}
