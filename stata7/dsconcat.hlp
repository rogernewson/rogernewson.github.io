{smcl}
{.-}
help for {cmd:dsconcat} {right:(Roger Newson)}
{.-}


{title:Concatenate a list of Stata data files into the memory}

{p 8 27}
{cmd:dsconcat} {it:filename_list}  
[ {cmd:,} {cmdab:sub:set}{cmd:(}[{it:varlist}] [{cmd:if} {it:exp}] [{cmd:in} {it:range}]{cmd:)}
{cmdab:dsi:d}{cmd:(}{it:newvarname}{cmd:)} {cmdab:dsn:ame}{cmd:(}{it:newvarname}{cmd:)}
{cmdab:obs:seq}{cmd:(}{it:newvarname}{cmd:)}
{cmdab:nol:abel} {cmdab:nold:sid}
]

{p}
where {it:filename_list} is a list of filenames separated by spaces.
If any filename in the list is specified without an extension, then
{hi:.dta} is assumed.


{title:Description}

{p}
{cmd:dsconcat} is a multiple-file version of {help use}. It takes, as input, a list of filenames,
assumed to belong to Stata data files, and creates a new data set in memory,
containing a concatenation of the input data files.
The new data set contains all variables in all the input data sets (or a subset of variables
specified by the {cmd:subset} option), and all observations in all the input data sets
(or a subset of observations specified by the {cmd:subset} option),
ordered primarily by source data set and secondarily by order of observations within source data set.
For any one variable in the output data set, values of the
variable are set to missing in any observation from an input data set not
containing that variable.
Optionally, {cmd:dsconcat} creates new variables specifying,
for each observation, the input file of origin and/or the sequential order of the
observation in its input file of origin.


{title:Options}

{p 0 4}
{cmd:subset(}[{it:varlist}] [{cmd:if} {it:exp}] [{cmd:in} {it:range}]{cmd:)}
specifies a subset of variables and/or observations
in each of the input data sets, to be included in the concatenated output data set in memory.
The value of the {cmd:subset()} option is a combination of a {help varlist}
and/or an {help if} qualifier and/or an {help in} qualifier.
Each of these is optional. However, they must be valid for all input data sets,
according to the rules used by the {help use} command.

{p 0 4}
{cmd:dsid(}{it:newvarname}{cmd:)} specifies a new integer variable to be created,
containing, for each observation in the new data set, the sequential order, in the
{it:filename_list}, of the input data set of origin of the observation. If {cmd:noldsid}
is not specified, then
{cmd:dsconcat} creates a value label for the {it:newvarname} with the same name,
assigning, to each positive integer {hi:i} from 1 to the number of input file names
in the list, a label equal to the filename of the {hi:i}th input data set,
truncated if necessary to the maximum label length in the version of Stata being used
(eg 80 characters for Small or Intercooled Stata 7).
If a value label of that name already exists in one of the input data sets, and
{cmd:nolabel} is not specified, then {cmd:dsconcat} adds new labels,
but does not replace existing labels.

{p 0 4}
{cmd:dsname(}{it:newvarname}{cmd:)} specifies a new string variable containing,
for each observation in the new data set, the name of the input data set of origin
of that observation, truncated if necessary to the maximum string length
in the version of Stata being used (eg 80 characters for Small or Intercooled Stata 7,
or 244 for {help specialedition:Stata 7 SE}).

{p 0 4}
{cmd:obsseq(}{it:newvarname}{cmd:)} specifies a new integer variable containing,
for each observation in the new data set, the sequential order of that observation
in its input data set of origin. If the {cmd:subset} option is specified, then
the sequential order of each observation is defined as its sequential order amongst
the subset of observations in the original data set specified by the {cmd:subset} option,
excluding observations in the original data set excluded by the {cmd:subset} option.

{p 0 4}
{cmd:nolabel} prevents {cmd:dsconcat} from copying value label definitions from the input data sets.

{p 0 4}
{cmd:noldsid} specifies that the new variable generated by the {cmd:dsid()} option will
have no value label. This implies that the values of the new variable specified by the
{cmd:dsid()} option will be listed as data set sequence numbers, not as data set names.
This option is useful if the input data sets are very numerous
and/or are repeated and/or are {help tempfile:temporary files} with uninformative names.
It is ignored if no {cmd:dsid()} option is specified.


{title:Remarks}

{p}
{cmd:dsconcat} is a multi-file version of {help use}. However, it is different in that it
overwrites existing data sets automatically (as {help collapse} and {help contract} do),
rather than requiring a {cmd:clear} option (as {help use} does).


{title:Examples}

{p 8 16}{inp:. dsconcat auto1 auto2 auto3 auto4,dsid(dsseq) obs(obsnum)}{p_end}
{p 8 16}{inp:. sort dsseq obsnum}{p_end}

{p 8 16}{inp:. dsconcat "Microsoft is inferior" Unix_is_superior IdontknowaboutMacOS}{p_end}

{p}
The following example creates a data set containing variables {hi:make}, {hi:foreign}, {hi:mpg}
and {hi:weight} in the first 53 observations of each of the data sets {hi:auto1}, {hi:auto2},
{hi:auto3} and {hi:auto4}, with the input data set name stored in the new string variable {hi:dslab}:

{p 8 16}{inp:. dsconcat auto1 auto2 auto3 auto4, subset(make foreign mpg weight in 1/53) dsn(dslab)}{p_end}


{title:Author}

{p}
Roger Newson, King's College London, UK.
Email: {browse "mailto:roger.newson@kcl.ac.uk":roger.newson@kcl.ac.uk}


{title:Also see}

{p 0 10}
{bind: }Manual:  {hi:[U] 25 Commands for combining data},
{hi:[R] append}, {hi:[R] save}
{p_end}
{p 0 10}
On-line:  help for {help append}, {help use}, {help save}
